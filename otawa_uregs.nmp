
canon "record"(card(5))
macro R(r) = if r != 0 then "record"(r); endif
macro F(r) = "record"(r);

extend
	add, sub,
	and, or, xor,
	sll, sra, srl,
	slt, sltu
		otawa_read	= { R(src1); R(src2); }
		otawa_write = { R(dest); }

extend
	addi,
	andi, ori, xori,
	slli, srai, srli,
	slti, sltiu
		otawa_read	= { R(src); }
		otawa_write = { R(dest); }

extend
	lui, auipc
		otawa_read	= { }
		otawa_write = { R(dest); }		

extend
	div, divu,
	rem, remu
		otawa_read = { R(dividend); R(divisor); }
		otawa_write = { R(dest); }
		
extend
	mul, mulh, mulhu, mulhsu
		otawa_read	= { R(multiplier); R(multiplicand); }
		otawa_write = { R(dest); }
	
extend
	beq, bne,
	blt, bltu,
	bge, bgeu
		otawa_read = { R(src1); R(src2); }
		otawa_write = { }
	
extend
	jal
		otawa_read = { }
		otawa_write = { R(dest); }

extend
	jalr
		otawa_read = { R(base); }
		otawa_write = { R(dest); }

extend
	lb, lbu, lh, lhu, lw, lwu, ld
		otawa_read = { R(base); }
		otawa_write = { R(dest); }

extend
	sb, sh, sw, sd
		otawa_read = { R(base); R(src); }
		otawa_write = { }

extend
	lr
		otawa_read = { R(addr); }
		otawa_write = { R(dest); }

extend
	sc,
	amoswap, amoadd,
	amoxor, amoand, amoor,
	amomin, amomax,
	amominu, amomaxu
		otawa_read = { R(src); R(addr); }
		otawa_write = { R(dest); }

extend
	flw, fld
		otawa_read = { R(base); }
		otawa_write = { F(dest); }

extend
	fsw, fsd
		otawa_read = { R(base); F(src); }
		otawa_write = { }

extend
	fadds, faddd,
	fsubs, fsubd,
	fmuls, fmuld,
	fdivs, fdivd,
	fminmaxs, fminmaxd,
	fsgnjs, fsgnjd
		otawa_read = { F(src1); F(src2); }
		otawa_write = { F(dest); }

extend
	fmuladds, fmuladdd,
	fmulsubs, fmulsubd,
	fnegmuladds, fnegmuladdd,
	fnegmulsubs, fnegmulsubd
		otawa_read = { F(src1); F(src2); F(src3); }
		otawa_write = { F(dest); }

extend
	fsqrts, fsqrtd
		otawa_read = { F(src); }
		otawa_write = { F(dest); }

extend
	fcvts, fcvt2d, fmv2,
	fclasss, fclassd,
	fcvt3s, fcvt4d, fmv3
		otawa_read = { F(src); }
		otawa_write = { R(dest); }

extend
	fcvt2s, fcvt3d, fmv,
	fcvt4s, fcvt5d, fmv4
		otawa_read = { R(src); }
		otawa_write = { F(dest); }

extend
	fcvtd
		otawa_read = { F(src); }
		otawa_write = { R(dest); }

extend
	fcmps, fcmpd
		otawa_read = { F(src1); F(src2); }
		otawa_write = { R(dest); }

extend
	fence
		otawa_read = { }
		otawa_write = { }

extend
	csrrw, csrrs, csrrc
		otawa_read = { R(source); }
		otawa_write = { R(dest); }

extend
	csrrwi, csrrsi, csrrci
		otawa_read = { }
		otawa_write = { R(dest); }

// RC/MC custom instructions
// remove these lines when not working with the RC/MC architecture
extend
	rcmc1
		otawa_read = { R(src1); R(src2); }
		otawa_write = { }

extend
	rcmc2, rcmc3, rcmc4,
	rcmc5, rcmc6
		otawa_read = { R(src); }
		otawa_write = { R(dest); }
