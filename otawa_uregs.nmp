
canon "record"(card(5))
macro R(r) = if r != 0 then "record"(r); endif

extend
	add, sub,
	and, or, xor,
	sll, sra, srl,
	slt, sltu
		otawa_read	= { R(src1); R(src2); }
		otawa_write = { R(dest); }

extend
	addi,
	andi, ori, xori,
	slli, srai, srli,
	slti, sltiu
		otawa_read	= { R(src); }
		otawa_write = { R(dest); }

extend
	lui, auipc
		otawa_read	= { }
		otawa_write = { R(dest); }		

extend
	div, divu,
	rem, remu
		otawa_read = { R(dividend); R(divisor); }
		otawa_write = { R(dest); }
		
extend
	mul, mulh, mulhu, mulhsu
		otawa_read	= { R(multiplier); R(multiplicand); }
		otawa_write = { R(dest); }
	
extend
	beq, bne,
	blt, bltu,
	bge, bgeu
		otawa_read = { R(src1); R(src2); }
		otawa_write = { }
	
extend
	jal
		otawa_read = { }
		otawa_write = { R(dest); }

extend
	jalr
		otawa_read = { R(base); }
		otawa_write = { R(dest); }

extend
	lb, lbu, lh, lhu, lw, lwu, ld
		otawa_read = { R(base); }
		otawa_write = { R(dest); }

extend
	sb, sh, sw, sd
		otawa_read = { R(base); R(src); }
		otawa_write = { }

extend
	fence
		otawa_read = { }
		otawa_write = { }

extend
	syscall
		otawa_read = { R(source); }
		otawa_write = { R(dest); }

